
function z = xgaussnoise(r)
%   z = = XGAUSSNOISE(r) generates Gaussian noise matrix z
%   Input 'r' structure includes lattice dimensions
%   Generates [noises(1),nlattice] delta-correlated noise fields
%   Generates [noises(2),nlattice] spatially correlated noise fields
%   Correlated noise fields generated by k-filtering the first x-noises.
%   xSPDE functions are licensed by Peter D. Drummond, (2015) - see License

mnoises = max(r.noises(1),r.noises(2));                 %%Independent noise 
z = r.s.dxt*randn(mnoises,r.nlattice);                  %%Calculate  xnoise
if r.noises(2) > 0                                      %%if k-space noise
    zk = z(1:r.noises(2),:);                            %%get some xnoise
    zk = reshape(zk,[r.noises(2),r.d.int]);             %%reshape for fft 
    for nd = 4:r.dimension+2                            %%fft loop
        zk = fft(zk,[],nd);                             %%take FFT
    end                                                 %%end fft loop  
    zk = zk.*r.noisefilt;                               %%knoise filter
    for nd = 4:r.dimension+2                            %%inverse fft loop
        zk = ifft(zk,[],nd);                            %%inverse FFT
    end                                                 %%end inverse loop 
    zk = reshape(zk,r.noises(2),r.nlattice);            %%reshape to flat
    z(1+r.noises(1):r.noisetot,:) = zk;                 %%add to noise
end                                                     %%end if k-noise  
end